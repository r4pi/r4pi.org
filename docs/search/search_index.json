{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"R for the Raspberry Pi","text":"<p>The aim of r4pi.org is to provide an up-to-date version of R for the Raspberry Pi computer.</p> <p>In addition, we provide access to pre-compiled versions of some of R's most popular packages.</p> <p>Note: This project is currently in early beta stage, so you should expect to find the odd bug here and there.</p>"},{"location":"#background","title":"Background","text":"<p>R is the premier language for statistical computing and has millions of users around the world.</p> <p>There's already a build available for the Raspberry Pi in the default OS repos, but it's a quite an old version.</p> <p>We provide up-to-date builds of R and also take a number of the extension packages from CRAN and pre-compile them ready for use on the Pi to make installation fast and simple.</p>"},{"location":"#r-in-action","title":"R in action","text":"<p>It's possible to write R code in any text editor and a number of the text editors and IDEs available for the Pi support R either straight out-of-the-box or, as in the VSCode screenshot below, with the addition of a plugin.</p> <p></p> <p>The screenshot above shows some of the analytical and plotting capabilities of R with code borrowed from the  \"palmerpenguins\" package website.</p>"},{"location":"#installation","title":"Installation","text":"<p>Now you know what the project is all about, it's time to move on to installation.</p>"},{"location":"docs/further_reading/","title":"Further Reading","text":"<p>Now that you have R installed, you might be wondering what you can do with it?</p> <p>You've entered a whole world of programming with data. The R community is especially welcoming and vibrant, so no matter who you are, or what your background, you'll find a warm welcome awaits. </p> <p>R users are often to be found on Twitter using the '#rstats' hashtag. It's also worth dropping by the RStudio Commnity site for help with R, particularly as it relates to any of RStudio's many open source packages.</p>"},{"location":"docs/further_reading/#understanding-the-basics","title":"Understanding the basics","text":""},{"location":"docs/further_reading/#r4ds","title":"R4DS","text":"<p>We think the best place to start is by working through the exercises in the book  R for Data Science (often just referred to as \"R4DS\"). You can buy a physical copy of the book, but you can also read the whole thing online, for free!</p>"},{"location":"docs/further_reading/#moderndive","title":"ModernDive","text":"<p>Another great book that's more statistics-heavy that you can read for free online is,  \"Statistical Inference via Data Science: A ModernDive into R and the Tidyverse\" (you can just call this one \"ModernDive\").</p>"},{"location":"docs/further_reading/#learning-statistics-with-r","title":"Learning Statistics with R","text":"<p>Learning Statistics with R</p>"},{"location":"docs/further_reading/#for-experienced-programmers","title":"For experienced programmers","text":"<p>A good place to start might be the \"learn X in Y minutes\" overview.</p>"},{"location":"docs/further_reading/#for-experienced-r-programmers","title":"For experienced R programmers","text":"<p>Hadley Wickham's Advanced R is also available online.</p>"},{"location":"docs/ide/","title":"Using an IDE","text":""},{"location":"docs/ide/#what-is-an-ide","title":"What is an IDE?","text":"<p>An IDE or \"Integrated Development Environment\" is a special kind of text editor, targeted specifically at computer programming.</p> <p>In princilple, you can write code in anything that will save plain text, however, an IDE will generally offer the programmer useful features like syntax highlighting and a way to execute code from a source code file one line at a time.</p> <p>So, an IDE will make you more productive as a developer. How do you get one?</p>"},{"location":"docs/ide/#installing-vscode","title":"Installing VSCode","text":"<p>Microsoft recently made the excellent Visual Studio Code IDE (also know as VSCode)  available for the Raspberry Pi. It's not much use for writing R out of the box, but we can install a plugin to fix that.</p> <p>You can install it from the default Raspberry Pi repos using the \"Add/Remove software\" app.</p> <p>Search for \"code\" or find it in the \"Programming\" section.</p> <p></p> <p>Once VSCode is installed we need to configure it for use with R.</p>"},{"location":"docs/ide/#configuring-vscode-for-r","title":"Configuring VSCode for R","text":"<p>In order to use VSCode with R, you need to install a plugin. Right now, we recommend the excellent \"R\" plugin from the \"REditorSupport\" team.</p> <p>If you're interested, you'll find the code repositories for this group's work on GitHub.</p> <p>To install it, follow these steps:</p> <ul> <li>open VSCode</li> <li>click the \"Extensions\" button on the left</li> <li>Search for \"R\"</li> <li>Select the \"R\" extension by REditorSupport</li> <li>Click the \"install\" button</li> </ul> <p></p> <p>Once the plugin is installed, you're ready to start using it.</p>"},{"location":"docs/ide/#using-vscode-to-write-r","title":"Using VSCode to write R","text":"<p>Now that the plugin is installed, VSCode will automatically do syntax highlighting for us for files that have the \".R\" extension. In addition, if you place your cursor on a particular line in an R file and press ctrl+enter, that line will be executed in an R console and the cursor will move to the next line. You can use this to step through a file one line at a time.</p> <p></p> <p>You can read more about the R plugin's features on the extension's \"Details\" page in VSCode.</p>"},{"location":"docs/install_packages/","title":"Installing packages","text":""},{"location":"docs/install_packages/#overview","title":"Overview","text":"<p>In the R world, add-on packages that provide useful functions or otherwise extend the language in some way, come from CRAN. CRAN serves pre-compiled binaries of these packages to Mac and Windows users, but Linux users (like us!) only get the source code.</p> <p>This makes sense as there are a very large number of Linux distributions out there and compiling binaries for all of them isn't feasible. Source code is the default for all Linux OSes then, but it can also be difficult to work with. As an end user, having to compile packages from source can be time consuming and packages also often require specific build-time system dependencies that you'd need to make sure were installed before attempting to build the package.</p>"},{"location":"docs/install_packages/#how-r4pi-helps","title":"How R4Pi helps","text":"<p>To make this process easier, the R4Pi project runs it's own CRAN mirror that only contains a small subset of some of the most popular packages available in the public CRAN. Since we know exactly which version of Linux you'll be using, we're able to compile packages for you, making installation simpler and much quicker!</p> <p>You can see a list of the pre-built packages that are available through the project on the R4Pi packages list. Additional packages are added to the project from time to time, but if you have a specific need you can raise an issue on the GitHub project and we'll try to accomodate your request.</p>"},{"location":"docs/install_packages/#installation","title":"Installation","text":"<p>You can see the default mirror by running the following inside of R:</p> <pre><code>&gt; options(\"repos\")\n</code></pre> <p>Packages are installed as usual using, for example:</p> <pre><code>&gt; install.packages(\"tidyverse\")\n</code></pre>"},{"location":"docs/install_packages/#installing-other-packages","title":"Installing other packages","text":"<p>If you need to install a package that's not available in our mirror, you can still use public CRAN, either by adding it to the list of available repos, or by specifying where a particular package should come from, like this:</p> <pre><code>&gt; install.packages(&lt;PACKAGE_NAME&gt;, repos = \"https://cloud.r-project.org\")\n</code></pre>"},{"location":"docs/installation/","title":"Installation","text":""},{"location":"docs/installation/#pre-requisites","title":"Pre-requisites","text":"<p>You must be running the official Raspberry Pi OS (previously called Raspbian) on your system and it must be up to date.</p> <p>Technically, the software should work on all versions of the Pi, however due to memory constraints with older versions and the Pi Zero, we recommend a Raspberry Pi 4 with 2G or more of RAM.</p> <p>You can check your Raspberry Pi model in a terminal with:</p> <pre><code>cat /sys/firmware/devicetree/base/model;echo\n</code></pre> <p>You are, of course, welcome to run the software on any Raspberry Pi, but you should expect poor performance on systems with low memory.</p>"},{"location":"docs/installation/#about-the-r4pi-r-build","title":"About the r4pi R build","text":"<p>Our build of R tracks the R Project's current \"release\" version.</p> <p>This is essentially the latest version of R available</p>"},{"location":"docs/installation/#setting-things-up","title":"Setting things up","text":"<p>Before you can install the r4pi build of R, you need configure access to the r4pi.org software repository.</p> <pre><code>curl -O  https://pkgs.r4pi.org/dl/r4pi-repo-conf_0.0.1-1_all.deb\nsudo dpkg -i  r4pi-repo-conf_0.0.1-1_all.deb\nsudo apt update\n</code></pre> <p>You're now ready to install our build of R.</p>"},{"location":"docs/installation/#installing-the-software","title":"Installing the software","text":"<p>Now that you've configured your system, you can go ahead and install the software.</p> <p>First update all your sources:</p> <pre><code>sudo apt update\n</code></pre> <p>You should see the new r4pi.org source in the output somewhere.</p> <p>Next, install any updates that are available, note that this can take some time.</p> <pre><code>sudo apt upgrade\n</code></pre> <p>Finally, install the r4pi build of R.</p> <pre><code>sudo apt install r4pi\n</code></pre> <p>Assuming that's successful, you're now ready to start using R.</p> <p>You can start R by running:</p> <pre><code>R\n</code></pre> <p>Type ctrl+d twice to exit.</p>"},{"location":"docs/using_r/","title":"Using R","text":""},{"location":"docs/using_r/#starting-r","title":"Starting R","text":"<p>R has it's own interactive REPL (Read-eval-print loop) and this is where many R users on Linux will start.</p> <p>There are two ways to start R. If you're using the Raspberry Pi OS desktop, you can start R through the menu as shown below.</p> <p></p> <p>Alternatively, you can start an interactive R session via the terminal, by typing <code>R</code> at the command prompt.</p> <pre><code>sellorm@raspberrypi $ R\n\nR version 4.0.4 (2021-02-15) -- \"Lost Library Book\"\nCopyright (C) 2021 The R Foundation for Statistical Computing\nPlatform: armv7l-unknown-linux-gnueabihf (32-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\n  Natural language support but running in an English locale\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite R or R packages in publications.\n\nType 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n&gt; \n</code></pre> <p>R starts up with messages about the version and license and so on.</p> <p>At this point you're running R and you can start to do all sorts of fun things.</p> <p>Let's start with a couple of basics. </p>"},{"location":"docs/using_r/#the-basics","title":"The basics","text":"<p>A quick note about conventions: Throughout this page you'll see R commands that you should type in prefaced by the <code>&gt;</code> symbol. This is R's default \"prompt\". You don't need to type that, just everything that follows it.</p> <p>Let's try some maths. Type the following and hit 'return':</p> <pre><code>&gt; 3192 / 76\n</code></pre> <p>Note: R, like most programming languages, uses <code>/</code> for division and <code>*</code> for multiplication.</p> <p>R should output:</p> <pre><code>[1] 42\n</code></pre> <p>Don't worry too much about the <code>[1]</code> for now, that's just R's way of saying that it's the first result. As you'll learn later, we can return many results at once and knowing which position things are in is more useful then.</p> <p>Now let's try some text...</p> <p>Let's assign a variable. A variable is a way of saving something for later. This could be a number or some text, or any one of a number of things.</p> <pre><code>&gt; my_name &lt;- \"sellorm\"\n</code></pre> <p>R will look like it's not done anything and return you straight to the <code>&gt;</code> prompt. Assigning a variable is a silent operation, so R doesn't bother to tell us anything when all goes according to plan.</p> <p>You can see what value our variable has by typing it's name and hitting return:</p> <pre><code>&gt; my_name\n</code></pre> <p>This will output:</p> <pre><code>[1] \"sellorm\"\n</code></pre> <p>(There's that <code>[1]</code> again!)</p> <p>Let's use out variable in another command. Try this:</p> <pre><code>&gt; cat(\"Hello\", my_name, \"\\n\")\n</code></pre> <p>This one should print the following to the screen:</p> <pre><code>Hello sellorm\n</code></pre> <p>The <code>cat</code> command is R's built-in 'concatenate' function, but it's often used for outputting simple messages like this.</p> <p>Hopefully the content of the command you ran makes sense -- joining the word \"Hello\" with the name you stored earlier --  but you may be wondering about the \"\\n\" on the end. This tells R to print a \"new line\". Without it, the message would still be printed, but our prompt would directly follow the output. </p> <p>Try it:</p> <pre><code>&gt; cat(\"Hello\", my_name)\nHello sellorm&gt;\n</code></pre> <p>See how the prompt is now stuck on the end of the output? This isn't a problem, it just looks messy and makes it harder to see where you are.</p> <p>Lastly (for now!), you can run a couple of R's built-in demos.</p> <p>Try this one first:</p> <pre><code>&gt; demo(graphics)\n</code></pre> <p>This demo will open another window, and display some pre-canned plots created with the built in plotting tools. R has a really powerful graphics system and the built in plotting tools are great, however, if you want to take your plots to the next level check out the 'ggplot2' package.</p> <p></p> <p>To cycle through the demo plots, make sure the terminal window has focus and hit return.</p> <p>When no more plots are displayed and you have a bunch of <code>&gt;</code>s stacking up in the REPL, you know you reached the end of the demo. You can close the graphics windows that opened now.</p> <p>Next try this one:</p> <pre><code>demo(image)\n</code></pre> <p>Again, press enter to see the next example. The code for each example is shown in the REPL too, so you can start to get a feel for how you might be able to start creating some plots of your own.</p> <p>Now that you've played around a little in R, you can exit the REPL.</p> <p>The official way to do this is with the <code>quit()</code> funtion, but R's developers have given us a handy alias, <code>q()</code>, to use instead.</p> <pre><code>&gt; q()\nSave workspace image? [y/n/c]: n\n</code></pre> <p>When you run <code>q()</code>, R will ask if you want to save your \"workspace\". The workspace contains all the variables you've created and packages that you've loaded. It's generally considered bad practice to save the workspace, as it can get us into trouble later on, so always answer with \"n\".</p> <p>Eventually, even this might feel like too much typing and someone will point out that you can accomplish the same thing by pressing \"ctrl+d\" twice, so feel free to do that instead if you prefer.</p>"},{"location":"news/","title":"News","text":""},{"location":"news/#2022-03-4-updated-website","title":"2022-03-4 - Updated website","text":"<p>We've just updated the website from vanilla mkdocs to mkdocs material. On the surface, this might seem like a minor change, but it will allow us to be a lot more flexible with the site in the future. Hopefully you'll like the new dark mode too.</p>"}]}